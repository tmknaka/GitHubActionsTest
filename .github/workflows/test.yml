name: GitHub Actions Demo

on: 
  workflow_dispatch:

jobs:
  echo_hello_world:
    runs-on: ubuntu-latest
    steps:
    # ステップ1: リポジトリのコードをチェックアウト
    - name: Checkout repository
      uses: actions/checkout@v4

    # ステップ2: .NET SDKをセットアップ
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        # プロジェクトで使用している.NETのバージョンに合わせて変更してください
        # 例: '6.0.x', '7.0.x', '8.0.x' など
        dotnet-version: '9.0.x'

    # ステップ3: NuGetパッケージを復元
    # リポジトリのルートに .sln または .csproj がある場合
    - name: Restore dependencies
      run: dotnet restore
    # 特定のソリューション/プロジェクトファイルを指定する場合 (コメントアウトを解除してパスを修正)
    # run: dotnet restore YourSolutionName.sln
    # run: dotnet restore src/YourProjectName/YourProjectName.csproj

    # ステップ4: プロジェクトをビルド (Release構成)
    # リポジトリのルートに .sln または .csproj がある場合
    - name: Build
      run: dotnet build --configuration Release --no-restore
    # 特定のソリューション/プロジェクトファイルを指定する場合 (コメントアウトを解除してパスを修正)
    # run: dotnet build YourSolutionName.sln --configuration Release --no-restore
    # run: dotnet build src/YourProjectName/YourProjectName.csproj --configuration Release --no-restore

    # --- オプション: テストを実行する場合 (不要な場合はこのステップを削除) ---
    # - name: Test
    #   run: dotnet test --no-build --verbosity normal
    # 特定のソリューション/プロジェクトファイルを指定する場合 (コメントアウトを解除してパスを修正)
    # run: dotnet test YourSolutionName.sln --no-build --verbosity normal
    # run: dotnet test tests/YourTestProjectName/YourTestProjectName.csproj --no-build --verbosity normal

    # --- オプション: アプリケーションを発行する場合 (不要な場合はこのステップと次のアップロードステップを削除) ---
    # - name: Publish
      # run: dotnet publish YourProjectName/YourProjectName.csproj --configuration Release --no-build -o ./publish
      # ↑↑↑ 必ず発行したいプロジェクトファイル(.csproj)のパスと出力ディレクトリ(-o)を指定してください ↑↑↑

    # --- オプション: 発行した成果物をアーティファクトとしてアップロードする場合 (Publishステップを使用する場合に有効化) ---
    # - name: Upload artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: console-app # アーティファクトの名前 (任意)
    #     path: ./publish   # Publishステップの出力ディレクトリ(-oで指定したパス)
